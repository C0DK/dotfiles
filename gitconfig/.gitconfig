[alias]
	co = checkout
	cob = checkout -b
	coo = !git fetch && git checkout
	br = branch
	brd = branch -d
	brD = branch -D
	bnm = branch --no-merged
	bm = branch --merged
	merged = branch --merged
	dmerged = "git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
	st = status
	aa = add -A .
	cm = commit -m
	ca = commit --aamend
	aacm = !git add -A . && git commit -m
	aaacm = aacm
	pl = pull
	ps = push
	pushf = push --force
	pf = pushf
	psf = pushf
	aacmp = "!f() { git add -A && git commit -m \"$@\" && git push; }; f"
	cp = cherry-pick

	back = checkout -
	amend = commit --amend --no-edit
	aamend = !git add -A . && git amend
	aamende = !git add -A . && git commit --amend
	aamendp = !git add -A . && git amend && git push --force
	amend-edit = commit --amend
	staging = !git checkout staging && git pull origin staging
	master = !git checkout master && git pull origin
	rb = rebase
	rbc = rebase --continue
	rba = rebase --abort
	arbc = !git aa && git rbc
	po = push origin
	pod = push origin dev
	pos = push origin staging
	pom = push origin master
	poh = push origin HEAD
	pogm = !git push origin gh-pages && git checkout master && git pull origin master && git rebase gh-pages && git push origin master && git checkout gh-pages
	pomg = !git push origin master && git checkout gh-pages && git pull origin gh-pages && git rebase master && git push origin gh-pages && git checkout master
	plo = pull origin
	plod = pull origin dev
	plos = pull origin staging
	plom = pull origin master
	ploh = pull origin HEAD
	unstage = reset --soft HEAD^
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	logbrief = log --pretty=oneline --abbrev-commit
	logthin = logbrief
	logless = logbrief
	lb = logbrief
	f = "!git ls-files | grep -i"
	gr = grep -Ii
	la = "!git config -l | grep alias | cut -c 7-"
	branch-name = rev-parse --abbrev-ref HEAD
	publish = !"git push --set-upstream origin $(git branch-name)"
	cobp = "!f() { git cob \"$@\" && git publish; }; f"
	up= publish

	# Delete all branches that have already been merged into the master branch.
	master-cleanse = !git master-cleanse-local; git master-cleanse-remote
	staging-cleanse = !git staging-cleanse-local; git staging-cleanse-remote
	# Delete all local branches that have been merged into the local master branch
	master-cleanse-local = "!git checkout master && git branch --merged | xargs git branch --delete"
	staging-cleanse-local = "!git checkout staging && git branch --merged | xargs git branch --delete"
	# Delete all remote branches that have been merged into the remote master branch.
	master-cleanse-remote = !"git branch --remotes --merged origin/master | sed 's# *origin/##' | grep -v '^master$' xargs -I% git push origin :% 2>&1 | grep --colour=never 'deleted'"
	staging-cleanse-remote = !"git branch --remotes --merged origin/staging | sed 's# *origin/##' | grep -v '^master$' xargs -I% git push origin :% 2>&1 | grep --colour=never 'deleted'"

	# Friendly wording is easier to remember.
	# Thanks to http://gggritso.com/human-git-aliases
	branches = branch -a
	tags = tag -n1 --list
	stashes = stash list

	rbi = rebase -i
	rbis = rebase -i staging

	reset-commit = reset --soft HEAD~1
	reset-commit-hard = reset --hard HEAD~1
	reset-commit-soft = reset-commit
	undo-commit = reset-commit
	undo-commit-hard = reset-commit-hard
	reset-staging = reset --HARD HEAD

	# Show who contributed with summarized changes
	who = shortlog --summary --
	# Show who contributed, in descending order by number of commits
	whorank = shortlog --summary --numbered --no-merges

	# git flow /staging name/
    hotfix = !"f() { git rebase --onto master \"$@\" && git rebase --onto staging master}; f"
	aacmp = "!f() { git add -A && git commit -m \"$@\" && git push; }; f"

[user]
	email = master@thecdk.net
	name = Casper Weiss Bang

[pull]
	rebase = true
[init]
	defaultBranch = main
