#+TITLE: I3 Configuration file
#+PROPERTY: header-args :tangle config
#+STARTUP: showeverything


This is my I3 configuration file.

The following snippets contain the various aspects of my file and explains what
each part does.
* Table Of Content :toc:
- [[#how-to-use][How To use]]
- [[#constants][Constants]]
  - [[#workspace-names][Workspace names]]
  - [[#default-programs][Default programs]]
- [[#binding-keys][Binding keys]]
  - [[#modify-key][Modify key]]
  - [[#floating-modifier][Floating Modifier]]
  - [[#close-focused-window][Close focused window]]
  - [[#open-application-launcher][Open application launcher]]
  - [[#take-a-screenshot][Take a screenshot]]
  - [[#changing-focus][Changing focus]]
  - [[#move-focused-window][Move focused window]]
  - [[#moves-focus-to-parent-container][Moves focus to parent container]]
  - [[#change-container-visualization][Change container visualization]]
  - [[#scratchpad][Scratchpad]]
  - [[#workspaces][Workspaces]]
  - [[#operations][Operations]]
  - [[#leader-key][Leader key]]
  - [[#resizing][Resizing]]
-  [[#visuals][Visuals]]
  - [[#font][Font]]
  - [[#workspace-layout][Workspace layout]]
  - [[#borders][Borders]]
  - [[#colors][Colors]]
  - [[#theming][Theming]]
  - [[#gaps][Gaps]]
  - [[#focus][focus]]
- [[#behavior-of-various-programs][Behavior of various programs]]
  - [[#default-workspaces][Default workspaces]]
  - [[#specify-floating-state-of-windows][Specify floating state of windows]]
  - [[#auto-start][Auto start]]

* How To use
Copy the ~config~ file from this folder into your ~.config/i3/~ folder
(probably). See [[https://i3wm.org/docs/userguide.html#configuring][the config]], for up to date details.
* Constants
** Workspace names
#+BEGIN_SRC Conf[Space]
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 "7:"
set $ws8 "8:"
set $ws9 "9:"
#+END_SRC
** Default programs
#+BEGIN_SRC Conf[Space]
set $locker slock
set $term alacritty
set $browser qutebrowser
#+END_SRC
* Binding keys
** Modify key
set the modifier key to the windows key
#+BEGIN_SRC Conf[Space]
set $mod Mod4
#+END_SRC
** Floating Modifier
Used when holding down said key while
moving the mouse to drag around floating windows.
#+BEGIN_SRC Conf[Space]
floating_modifier $mod
#+END_SRC
** Close focused window
#+BEGIN_SRC Conf[Space]
bindsym $mod+q kill
#+END_SRC
** Open application launcher
#+BEGIN_SRC Conf[Space]
bindsym Ctrl+Return exec --no-startup-id dmenu_run
#+END_SRC
** Take a screenshot
#+BEGIN_SRC Conf[Space]
bindsym $mod+Shift+p exec --no-startup-id flameshot gui
#+END_SRC
** Changing focus
changing which window is in focus
#+BEGIN_SRC Conf[Space]
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
#+END_SRC
** Move focused window
#+BEGIN_SRC Conf[Space]
# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#+END_SRC
** Moves focus to parent container
#+BEGIN_SRC Conf[Space]
bindsym $mod+a focus parent
#+END_SRC
** Change container visualization
*** Change split orientation
#+BEGIN_SRC Conf[Space]
# split orientation
bindsym $mod+shift+h split h
bindsym $mod+shift+v split v
bindsym $mod+shift+q split toggle
#+END_SRC
*** Set container layout type
#+BEGIN_SRC Conf[Space]
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
#+END_SRC
*** Toggle full screen
#+BEGIN_SRC Conf[Space]
bindsym $mod+f fullscreen toggle
#+END_SRC
*** Toggle full screen
#+BEGIN_SRC Conf[Space]
bindsym $mod+Shift+space floating toggle
#+END_SRC
*** Toggle floating
Toggles whether the current container/window is floating
#+BEGIN_SRC Conf[Space]
bindsym $mod+space focus mode_toggle
#+END_SRC
*** Toggle Sticky
#+BEGIN_SRC Conf[Space]
bindsym $mod+Shift+s sticky toggle
#+END_SRC
** Scratchpad
*** Iterates through scratchpads
#+BEGIN_SRC Conf[Space]
bindsym $mod+Tab scratchpad show
#+END_SRC
*** Moves focused window to scratchpad
#+BEGIN_SRC Conf[Space]
bindsym $mod+Shift+minus move scratchpad
#+END_SRC
** Workspaces
*** Move to neighbor workspace
#+BEGIN_SRC Conf[Space]
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev
#+END_SRC
*** Move to previous workspace
#+BEGIN_SRC Conf[Space]
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth
#+END_SRC
*** Go back to previous workspace
#+BEGIN_SRC Conf[Space]
bindsym $mod+b workspace back_and_forth
#+END_SRC
*** Go to workspace
#+BEGIN_SRC Conf[Space]
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

#+END_SRC
*** Move container to workspace
#+BEGIN_SRC Conf[Space]
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
#+END_SRC
*** Move container and go to workspace
#+BEGIN_SRC Conf[Space]
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
#+END_SRC
** Operations
#+BEGIN_SRC Conf[Space]
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
#+END_SRC
** Leader key
I use a nicely drafted leaderkey to make i3 more like doom emacs / spacemacs.
This essentially means that you press the ~leader key~, and then a menu pops up in your bar,
which shows which keys to press next. Here you will get reasonable submenus making key combos easy to use - i.e ~LEAD o~ opens the /application launcher/ menu. so ~LEAD o SHIFT+p~ opens my password manager, [[https://www.passwordstore.org/][pass]].

*** TODO would be to have a dedicated key for it instead of a combo, but currently i don't know which

*** Open leader menu
#+BEGIN_SRC Conf[Space]
bindsym $mod+o mode "$mode_leader"
set $mode_leader (s)ystem, (o)pen, (c)onfig, (a)ction, ser(v)ices
#+END_SRC
*** Main mode
#+BEGIN_SRC Conf[Space]
mode "$mode_leader" {
    bindsym s mode "$mode_system"
    bindsym o mode "$mode_open"
    bindsym c mode "$mode_settings"
    bindsym a mode "$mode_actions"

    bindsym $mod+Shift+p exec --no-startup-id flameshot gui
    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym q mode "default"
    bindsym Escape mode "default"
}
#+END_SRC
*** System mode
Things like locking, shutting down etc.
#+BEGIN_SRC Conf[Space]
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
   bindsym l exec --no-startup-id $locker lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym q mode "default"
    bindsym Escape mode "default"
}
#+END_SRC
*** Application launch mode
Basically a shorthand for opening often used programs.
#+BEGIN_SRC Conf[Space]
set $mode_open (e)ditor, (t)erm, (b)rowser, (s)potify, (Shift+s)kype, (m)essenger, (k)eybase, (p)dfreader, (Shift+p)ass, (Shift+t)hunderbird, (c)hrome
mode "$mode_open" {
    bindsym e exec --no-startup-id emacs, mode "default"
    bindsym t exec --no-startup-id $term -e sh -c "fresh && zsh", mode "default"
    bindsym b exec --no-startup-id $browser, mode "default"
    bindsym c exec --no-startup-id google-chrome-stable, mode "default"
    bindsym s exec --no-startup-id spotify, mode "default"
    bindsym m exec --no-startup-id caprine, mode "default"
    bindsym k exec --no-startup-id run_keybase, mode "default"
    bindsym p exec --no-startup-id epdfview, mode "default"
    bindsym Shift+p exec --no-startup-id passmenu, mode "default"
    bindsym Shift+s exec --no-startup-id skypeforlinux, mode "default"
    bindsym Shift+t exec --no-startup-id thunderbird, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym q mode "default"
    bindsym Escape mode "default"
}
#+END_SRC
*** Settings mode
Configuration of the system. Much like opening "settings" on your phone
#+BEGIN_SRC Conf[Space]
set $mode_settings (a)randr (b)luetooth, (p)ulse audio, (l)xappearance, (n)mtui, (N)itrogen, (k)ill, (b)menu
mode "$mode_settings" {
	 bindsym b exec blueman-manager, mode "default"
	 bindsym a exec arandr, mode "default"
	 bindsym p exec pavucontrol, mode "default"
	 # bindsym s exec stalonetray, mode "default"
	 bindsym l exec lxappearance, mode "default"
	 bindsym shift+n --no-startup-id exec nitrogen, mode "default"
	 bindsym n exec "alacritty -e nmtui", mode "default"
	 bindsym k exec "killall nitrogen; killall lxappearance; killall pavucontrol; killall stalonetray; killall blueman-manager; killall nmtui; killall bmenu", mode "default"
     bindsym b exec alacritty -e 'bmenu'

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym q mode "default"
    bindsym Escape mode "default"
}
#+END_SRC
*** Actions mode
Various actions that are done frequently.
Shorthand for running some commands or stuff like that.
#+BEGIN_SRC Conf[Space]
set $mode_actions (b)ackup, reload (i)3, restart (Shift+i)3, restart (d)unst, (u)pdate, launch (p)ostgres
mode "$mode_actions" {
	 bindsym b exec --no-startup-id $term -e 'backup | less', mode "default"
	 bindsym u exec --no-startup-id $term -e 'yay -Syu', mode "default"
	 bindsym Shift+i mode "default", restart
     bindsym i mode "default", reload
     bindsym p exec --no-startup-id sudo systemctl restart postgresql.service, mode "default"
     bindsym d --release exec "killall dunst; exec notify-send 'restart dunst'", mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym q mode "default"
    bindsym Escape mode "default"
}
#+END_SRC
** Resizing
These bindings trigger as soon as you enter the resize mode
- Pressing left will shrink the window’s width.
- Pressing right will grow the window’s width.
- Pressing up will shrink the window’s height.
- Pressing down will grow the window’s height.
#+BEGIN_SRC Conf[Space]
bindsym $mod+r mode "resize"
mode "resize" {
    bindsym j resize shrink width 5 px or 5 ppt
    bindsym k resize grow height 5 px or 5 ppt
    bindsym l resize shrink height 5 px or 5 ppt
    bindsym semicolon resize grow width 5 px or 5 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # exit resize mode: Enter or Escape
    bindsym Return mode "default"
    bindsym q mode "default"
    bindsym Escape mode "default"
}
#+END_SRC
*  Visuals
** Font
#+BEGIN_SRC Conf[Space]
font xft:SauceCodePro Nerd Font Mono 9
#+END_SRC
** Workspace layout
Whether multiple things should render
as tabs or stacking.
#+BEGIN_SRC Conf[Space]
workspace_layout tabbed

title_align center
#+END_SRC
** Borders
We want as simple borders as possible, very thin and hide them when we they
aren't on the border towards something else (i.e in fullscreen mode)
#+BEGIN_SRC Conf[Space]
hide_edge_borders both
default_border pixel 1
#+END_SRC
#+BEGIN_SRC Conf[Space]
#+END_SRC
** Colors
#+BEGIN_SRC Conf[Space]
set_from_resource $background background
set_from_resource $foreground foreground
set_from_resource $color0     color0
set_from_resource $color1     color1
set_from_resource $color2     color2
set_from_resource $color3     color3
set_from_resource $color4     color4
set_from_resource $color5     color5
set_from_resource $color6     color6
set_from_resource $color7     color7
set_from_resource $color8     color8
set_from_resource $color9     color9
set_from_resource $color10    color10
set_from_resource $color11    color11
set_from_resource $color12    color12
set_from_resource $color13    color13
set_from_resource $color14    color14
set_from_resource $color15    color15
#+END_SRC
** Theming
#+BEGIN_SRC Conf[Space]
client.focused          $color0 $color0 $foreground $color0
client.focused_inactive $color0 $color0 $foreground $color0
client.unfocused        $background $color0 $color8 $color0
client.urgent           $background  $color1 $foreground $color0
client.placeholder      $background $color10 $foreground $color0

client.background       $background

#+END_SRC
** Gaps
#+BEGIN_SRC Conf[Space]
gaps inner 0
gaps outer 0
#+END_SRC
** focus
#+BEGIN_SRC Conf[Space]
focus_follows_mouse no
no_focus [window_role=".*"]
focus_on_window_activation no
#+END_SRC
* Behavior of various programs
** Default workspaces
Specify where specific windows/programs should open by default.
#+BEGIN_SRC Conf[Space]
assign [class="Skype"] $ws4
assign [class="Slack"] $ws4
assign [class="Thunderbird"] $ws4
assign [class="qutebrowser"] $ws3
assign [class="Keybase"] $ws4
assign [class="Caprine"] $ws4
assign [instance="w1term"] $ws1
for_window [instance="w1term"] move to workspace $ws1
for_window [class="Spotify"] move to workspace $ws5
for_window [class="jetbrains"] move to workspace $ws2
#+END_SRC
** Specify floating state of windows
#+BEGIN_SRC Conf[Space]
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Alacritty"] floating disable border pixel 1
for_window [instance="forceFloat"] floating enable move scratchpad border normal
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [title="About Pale Moon"] floating enable
for_window [class="Pavucontrol"] floating enable sticky enable
for_window [class="lxappearane"] floating enable sticky enable
for_window [class="nitrogen"] floating enable sticky enable
for_window [class="Arandr"] floating enable border none, resize set 700 600, move position center
for_window [class="Blueman-manager"] floating enable sticky enable
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Skype"] floating disable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
#+END_SRC
** Auto start
Programs we want to launch when the system starts
#+BEGIN_SRC Conf[Space]

exec --no-startup-id alacritty --class=w1term -e "tmux_ws"
exec --no-startup-id i3-msg 'workspace $ws2; exec /usr/bin/emacs'
exec --no-startup-id i3-msg 'workspace $ws3; exec /usr/bin/qutebrowser'
exec --no-startup-id i3-msg 'workspace $ws4; exec /usr/bin/thunderbird'
exec --no-startup-id i3-msg 'workspace $ws4; exec /usr/bin/slack'
exec --no-startup-id i3-msg 'workspace $ws4; exec /usr/bin/caprine'
exec --no-startup-id i3-msg 'workspace $ws4; exec run_keybase'
exec --no-startup-id i3-msg 'workspace $ws5; exec /usr/bin/spotify'
exec alacritty --class='forceFloat' -e 'tmux_scratchpad'

exec --no-startup-id volumeicon
exec --no-startup-id ~/.config/polybar/launch.sh

exec --no-startup-id flameshot
exec --no-startup-id redshift
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id sleep 10; picom -b
exec --no-startup-id nitrogen --restore
exec --no-startup-id nm-applet
exec --no-startup-id xfce4-power-manager
exec --no-startup-id pamac-tray
exec --no-startup-id clipit
exec --no-startup-id xautolock -time 10 -locker $locker
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id fix_xcursor
#+END_SRC
